{
  "version": 1,
  "defaultProject": "mfe-shell",
  "projects": {
    "mfe-shell": {
      "root": "apps/mfe-shell",
      "sourceRoot": "apps/mfe-shell/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/mfe-shell",
            "index": "apps/mfe-shell/src/index.html",
            "main": "apps/mfe-shell/src/main.ts",
            "polyfills": "apps/mfe-shell/src/polyfills.ts",
            "tsConfig": "apps/mfe-shell/tsconfig.app.json",
            "assets": ["apps/mfe-shell/src/favicon.ico", "apps/mfe-shell/src/assets"],
            "scripts": [
              {
                "bundleName": "polyfill-webcomp-es5",
                "input": "node_modules/@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js"
              },
              {
                "bundleName": "polyfill-webcomp",
                "input": "node_modules/@webcomponents/webcomponentsjs/bundles/webcomponents-sd-ce-pf.js"
              },
              "node_modules/rxjs/bundles/rxjs.umd.js",
              "node_modules/@angular/core/bundles/core.umd.js",
              "node_modules/@angular/common/bundles/common.umd.js",
              "node_modules/@angular/common/bundles/common-http.umd.js",
              "node_modules/@angular/compiler/bundles/compiler.umd.js",
              "node_modules/@angular/forms/bundles/forms.umd.js",
              "node_modules/@angular/router/bundles/router.umd.js",
              "node_modules/@angular/platform-browser/bundles/platform-browser.umd.js",
              "node_modules/@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js"
            ],
            "styles": [
              "libs/shared/ui-angular/src/lib/styles/mat-theme.scss",
              "libs/shared/ui-styles/src/lib/mat-overrides/mat-icons.scss",
              "libs/shared/ui-styles/src/lib/shared-ui-styles/index.scss",
              "apps/mfe-shell/src/styles/global.scss"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui-styles/src/lib"]
            },
            "extractCss": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/mfe-shell/src/environments/environment.ts",
                  "with": "apps/mfe-shell/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "mfe-shell:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "mfe-shell:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/mfe-shell/.eslintrc",
            "tsConfig": [
              "apps/mfe-shell/tsconfig.app.json",
              "apps/mfe-shell/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/mfe-shell/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mfe-shell/jest.config.js",
            "tsConfig": "apps/mfe-shell/tsconfig.spec.json",
            "setupFile": "apps/mfe-shell/src/test-setup.ts"
          }
        }
      }
    },
    "mfe-shell-e2e": {
      "root": "apps/mfe-shell-e2e",
      "sourceRoot": "apps/mfe-shell-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/mfe-shell-e2e/cypress.json",
            "tsConfig": "apps/mfe-shell-e2e/tsconfig.e2e.json",
            "devServerTarget": "mfe-shell:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "mfe-shell:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/mfe-shell-e2e/.eslintrc",
            "tsConfig": ["apps/mfe-shell-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/mfe-shell-e2e/**"]
          }
        }
      }
    },
    "shared-ui": {
      "root": "libs/shared/ui",
      "sourceRoot": "libs/shared/ui/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/shared/ui/.eslintrc",
            "tsConfig": [
              "libs/shared/ui/tsconfig.lib.json",
              "libs/shared/ui/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/ui/**"],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui-styles/src/lib"]
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui/jest.config.js",
            "tsConfig": "libs/shared/ui/tsconfig.spec.json"
          }
        }
      }
    },
    "shared-util": {
      "root": "libs/shared/utils",
      "sourceRoot": "libs/shared/utils/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/shared/utils/.eslintrc",
            "tsConfig": [
              "libs/shared/utils/tsconfig.lib.json",
              "libs/shared/utils/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/utils/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/utils/jest.config.js",
            "tsConfig": "libs/shared/utils/tsconfig.spec.json"
          }
        }
      }
    },
    "mfe-client-ng-a": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/mfe-client-ng-a",
      "sourceRoot": "apps/mfe-client-ng-a/src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "ngx-build-plus:build",
          "options": {
            "outputPath": "dist/apps/mfe-shell/mfe-client-ng-a",
            "index": "apps/mfe-client-ng-a/src/index.html",
            "main": "apps/mfe-client-ng-a/src/main.ts",
            "polyfills": "apps/mfe-client-ng-a/src/polyfills.ts",
            "tsConfig": "apps/mfe-client-ng-a/tsconfig.app.json",
            "aot": false,
            "assets": [
              "apps/mfe-client-ng-a/src/favicon.ico",
              "apps/mfe-client-ng-a/src/assets"
            ],
            "scripts": [],
            "styles": [
              "libs/shared/ui-styles/src/lib/shared-ui-styles/index.scss",
              "libs/shared/ui-angular/src/lib/styles/mat-theme.scss",
              "libs/shared/ui-angular/src/lib/styles/mat-icons.scss"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui-styles/src/lib"]
            }
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/mfe-client-ng-a/src/environments/environment.ts",
                  "with": "apps/mfe-client-ng-a/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "ngx-build-plus:dev-server",
          "options": {
            "browserTarget": "mfe-client-ng-a:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "mfe-client-ng-a:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "mfe-client-ng-a:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/mfe-client-ng-a/tsconfig.app.json",
              "apps/mfe-client-ng-a/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/mfe-client-ng-a/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mfe-client-ng-a/jest.config.js",
            "tsConfig": "apps/mfe-client-ng-a/tsconfig.spec.json",
            "setupFile": "apps/mfe-client-ng-a/src/test-setup.ts"
          }
        }
      }
    },
    "mfe-client-ng-a-e2e": {
      "root": "apps/mfe-client-ng-a-e2e",
      "sourceRoot": "apps/mfe-client-ng-a-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/mfe-client-ng-a-e2e/cypress.json",
            "tsConfig": "apps/mfe-client-ng-a-e2e/tsconfig.e2e.json",
            "devServerTarget": "mfe-client-ng-a:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "mfe-client-ng-a:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/mfe-client-ng-a-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/mfe-client-ng-a-e2e/**"]
          }
        }
      }
    },
    "mfe-client-react-a": {
      "root": "apps/mfe-client-react-a",
      "sourceRoot": "apps/mfe-client-react-a/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/mfe-shell/mfe-client-react-a",
            "index": "apps/mfe-client-react-a/src/index.html",
            "main": "apps/mfe-client-react-a/src/main.tsx",
            "polyfills": "apps/mfe-client-react-a/src/polyfills.ts",
            "tsConfig": "apps/mfe-client-react-a/tsconfig.app.json",
            "assets": [
              "apps/mfe-client-react-a/src/favicon.ico",
              "apps/mfe-client-react-a/src/assets"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui-styles/src/lib"]
            },
            "webpackConfig": "webpack-react.config.js"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/mfe-client-react-a/src/environments/environment.ts",
                  "with": "apps/mfe-client-react-a/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "mfe-client-react-a:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "mfe-client-react-a:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/mfe-client-react-a/.eslintrc",
            "tsConfig": [
              "apps/mfe-client-react-a/tsconfig.app.json",
              "apps/mfe-client-react-a/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/mfe-client-react-a/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/mfe-client-react-a/jest.config.js",
            "tsConfig": "apps/mfe-client-react-a/tsconfig.spec.json"
          }
        }
      }
    },
    "mfe-client-react-a-e2e": {
      "root": "apps/mfe-client-react-a-e2e",
      "sourceRoot": "apps/mfe-client-react-a-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/mfe-client-react-a-e2e/cypress.json",
            "tsConfig": "apps/mfe-client-react-a-e2e/tsconfig.e2e.json",
            "devServerTarget": "mfe-client-react-a:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "mfe-client-react-a:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/mfe-client-react-a-e2e/.eslintrc",
            "tsConfig": ["apps/mfe-client-react-a-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/mfe-client-react-a-e2e/**"]
          }
        }
      }
    },
    "shared-ui-angular": {
      "root": "libs/shared/ui-angular",
      "sourceRoot": "libs/shared/ui-angular/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/shared/ui-angular/.eslintrc",
            "tsConfig": [
              "libs/shared/ui-angular/tsconfig.lib.json",
              "libs/shared/ui-angular/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/ui-angular/**"],
            "stylePreprocessorOptions": {
              "includePaths": ["libs/shared/ui-styles/src/lib"]
            }
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/ui-angular/jest.config.js",
            "tsConfig": "libs/shared/ui-angular/tsconfig.spec.json"
          }
        }
      }
    },
    "shared-ui-styles": {
      "root": "libs/shared/ui-styles",
      "sourceRoot": "libs/shared/ui-styles/src",
      "projectType": "library",
      "schematics": {},
      "architect": {}
    },
    "shell": {
      "root": "libs/shell",
      "sourceRoot": "libs/shell/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/shell/.eslintrc",
            "tsConfig": ["libs/shell/tsconfig.lib.json", "libs/shell/tsconfig.spec.json"],
            "exclude": ["**/node_modules/**", "!libs/shell/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shell/jest.config.js",
            "tsConfig": "libs/shell/tsconfig.spec.json"
          }
        }
      }
    },
    "shared-model": {
      "root": "libs/shared/model",
      "sourceRoot": "libs/shared/model/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/shared/model/.eslintrc",
            "tsConfig": [
              "libs/shared/model/tsconfig.lib.json",
              "libs/shared/model/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/model/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/model/jest.config.js",
            "tsConfig": "libs/shared/model/tsconfig.spec.json"
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/web"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    },
    "@nrwl/react": {
      "application": {
        "style": "styled-components",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "styled-components"
      },
      "library": {
        "style": "styled-components",
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      }
    }
  }
}
